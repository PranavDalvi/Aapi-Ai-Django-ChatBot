<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PYBOT</title>

  <!-- CSS -->
  <style>
    :root {
      --fadeIn_fadeOut_transition_speed: 300ms;
      --chatBot_ZIndex: 100;
      /*Z-Index to keep Chat Bot top of all other elements*/
      --chatBot_windowCommonRadius: 5px;
    }

    * {
      margin: 0;
      padding: 0;
      font-family: sans-serif;
      box-sizing: border-box;
    }

    body {
      background-color: #f8f8f8;
      display: flex;
      flex-direction: column;
      flex-wrap: nowrap;
      justify-content: space-evenly;
      align-items: center;
    }

    .container {
      position: absolute;
      right: 30px;
      /*Right and bottom are set to position the chat bot window in the right-corner of the screen*/
      bottom: 60px;
      width: 450px;
      height: 80vh;
      display: flex;
      flex-direction: column;
      box-shadow: 10px 10px 5px #aaaaaa;
      background-color: dodgerblue;
      border: 2px solid dodgerblue;
      border-radius: var(--chatBot_windowCommonRadius);
      transition: var(--fadeIn_fadeOut_transition_speed);
      transition-property: opacity, background-color, transform;
      z-index: var(--chatBot_ZIndex);
    }

    .header {
      display: flex;
      flex-direction: row;
      flex-wrap: nowrap;
      justify-content: space-between;
    }

    .header h1 {
      color: white;
      padding: 15px;
    }

    .hideBot {
      padding: 10px;
      font-size: 18px;
      border: none;
      outline: none;
      background-color: dodgerblue;
      color: white;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .body {
      display: flex;
      flex: 1;
      color: white;
      background-color: rgba(0, 0, 0, 0.7);
      margin-top: auto;
      overflow-y: scroll;
      flex-direction: column-reverse;
      scrollbar-width: none;
      scroll-behavior: smooth;
      -ms-overflow-style: none;
      padding: 20px 30px;
      border-radius: 5px 5px 0px 0px;
    }


    .bot_message {
      background-color: dodgerblue;
      padding: 10px;
      color: white;
      width: fit-content;
      border-top-left-radius: 0px !important;
      border-radius: 10px;
      margin-bottom: 15px;
      animation: floatup .5s forwards
    }

    .user_message {
      margin-left: auto;
      background-color: white;
      color: black;
      padding: 10px;
      width: fit-content;
      border-top-right-radius: 0px !important;
      border-radius: 10px;
      margin-bottom: 15px;
      animation: floatup .5s forwards
    }

    @keyframes floatup {
      from {
        transform: translateY(27px);
      }

      to {
        transform: translateY(0px);
        opacity: 1;
      }
    }

    .footer {
      display: flex;
    }

    .footer input {
      flex: 1;
      height: 40px;
      border: none;
      border-radius: 0px 0px 0px 5px;
      outline: none;
      padding-left: 5px;
      font-size: 16px;
    }

    .footer button {
      width: 100px;
      font-size: 18px;
      border: none;
      border-radius: 0px 0px 5px 0px;
      outline: none;
      background-color: dodgerblue;
      color: white;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .footer button:hover {
      background-color: blue;
    }

    .footer button:disabled{
      background-color: #aaaaaa;
    }

    .showBot {
      position: absolute;
      right: 30px;
      /*Right and bottom are set to position the chat bot window in the right-corner of the screen*/
      bottom: 25px;
      padding: 10px 40px 10px 37px;
      font-size: 18px;
      border: none;
      border-radius: var(--chatBot_windowCommonRadius);
      outline: none;
      background-color: dodgerblue;
      color: #f8f8f8;
      box-shadow: 10px 10px 5px #aaaaaa;
      cursor: pointer;
      transition: var(--fadeIn_fadeOut_transition_speed);
      transition-property: opacity, background-color, transform;
      z-index: var(--chatBot_ZIndex);
    }

    .showBot:hover {
      background-color: blue;
    }

    .hidden {
      display: none;
    }
  </style>
</head>

<body>
  <div id="botWindow" class="container hidden">
    <div class="header">
      <h1>ChatBot</h1>
      <button class="hideBot" type="button" onclick="hideBotFun()">X</button>
    </div>
    <div class="body">
      <p class="bot_message">Hi! How can I help you ? </p>
    </div>
    {%csrf_token%}
    <form id="myForm" action ="chatbot">
      <div class="footer">
        <input id="query" type="text" onkeyup="checkText()" placeholder="Type..." name="query">
        <button class="submit_btn" type="submit" > Send</button>
      </div>
    </form>
  </div>
  <button id="showBotbtn" class="showBot" type="button" onclick="showBotFun()">Chat</button>

  <!-- ajax string -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

  <!-- JavaScript -->
  <script>
    "use strict";
    const fadeIn_fadeOut_transition_speed = 300;

    function showBotFun() {
      // Initialize Variables
      const chatBotWindow = document.getElementById("botWindow");

      //Main Logic to show chatBot
      chatBotWindow.style.opacity = 0;
      chatBotWindow.style.transform = `translateY(10%)`;
      document.querySelector(".container").classList.remove("hidden");

      //Pausing the flow of the code for 0.3 secs
      setTimeout(() => {
        chatBotWindow.style.transform = `translateY(0%)`;
        chatBotWindow.style.opacity = 1;
      }, fadeIn_fadeOut_transition_speed);

      //Main Logic to hide Chat button
      const showBot = document.getElementById("showBotbtn");
      showBot.style.opacity = 0;

      //Pausing the flow of the code for 0.3 secs
      setTimeout(() => {
        document.querySelector(".showBot").classList.add("hidden");
      }, fadeIn_fadeOut_transition_speed);

    }

    function hideBotFun() {
      // Initialize Variables
      const showBot = document.getElementById("showBotbtn");

      //Main Logic to show Chat button
      showBot.style.opacity = 0;

      //Pausing the flow of the code for 0.3 secs
      document.querySelector(".showBot").classList.remove("hidden");
      setTimeout(() => {
        showBot.style.opacity = 1;
      }, fadeIn_fadeOut_transition_speed);

      //Main Logic to hide chat bot
      const chatBotWindow = document.getElementById("botWindow");
      chatBotWindow.style.transform = `translateY(11%)`;
      chatBotWindow.style.opacity = 0;

      //Pausing the flow of the code for 0.3 secs
      setTimeout(() => {
        document.querySelector(".container").classList.add("hidden");
      }, fadeIn_fadeOut_transition_speed);


    }

    function getCookie(name) {
      let cookieValue = null;
      if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
          const cookie = cookies[i].trim();
          // Does this cookie string begin with the name we want?
          if (cookie.substring(0, name.length + 1) === (name + '=')) {
            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
            break;
          }
        }
      }
      return cookieValue;
    }
    const csrftoken = getCookie('csrftoken');

    // Disable the send button if there is no text in query field

    const regex = /[A-Za-z0-9]/ 
    let submit_btn = document.querySelector(".submit_btn");
    function checkText(){
      const inp_string = document.querySelector("#query").value
      if(regex.test(inp_string) === false){
        submit_btn.disabled = true
      }else{
        submit_btn.disabled = false
      }
    }

    // updates the chats
    function updateChatText() {
      let html = "";
      messages.slice().reverse().forEach(function (item, index) {
        if (item.name === "Bot") {
          html += '<p class= bot_message>' + item.message + '</p>'
        } else {
          html += '<p class= user_message>' + item.message + '</p>'
        }
      });
      const chatMessage = document.querySelector(".body");
      chatMessage.innerHTML = html;
    }

    // To give chat like feel
    function scrollToBottom() {
      messages.scrollTop = messages.scrollHeight;
    }

    // Here is the main code which Posts and gets responses
    let user_input = document.querySelector("#query")
    let messages = [];
    let form1 = document.getElementById("myForm");
    let query = document.getElementById("query").value;
    form1.addEventListener("submit", function (e) {
      e.preventDefault();
      submit_btn.disabled = true;

      let txtUserInp = document.querySelector("#query");
      if (txtUserInp.value == "") {
        return
      }

      let msg1 = { name: "user1", message: txtUserInp.value }
      messages.push(msg1);
      updateChatText();
      console.log(txtUserInp.value)
      txtUserInp.value = "";

      $.ajax({
        method: "POST",
        url: "home/",
        headers: {
          "Content-type": "application/json",
          "X-Requested-With": "XMLHttpRequest",
          "X-CSRFToken": csrftoken,
        },
        data: txtUserInp.value
      })
      // This steps should be done if the input is successfully submitted to the bot and get response
        .done(function (response) {
          const botRes = JSON.stringify(response);
          const obj = JSON.parse(botRes);
          let msg2 = {name: "Bot", message: obj.Bot};
          messages.push(msg2);
          updateChatText();
          scrollToBottom();
          submit_btn.disabled = false;
        })
        // if any errors they will be thrown into the console
        .fail(function(response){
          msg2 = {name: "Bot", messages: "Internal server error, Please reload the page."}
          submit_btn.disabled = false;
        })
    })

  </script>
</body>

</html>
